# Generated by Django 2.0 on 2017-12-05 16:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                (
                    'course_id',
                    models.CharField(db_column='Course_ID', max_length=16, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('icon', models.CharField(blank=True, db_column='Icon', max_length=45, null=True)),
                ('cost', models.IntegerField(blank=True, db_column='Cost', max_length=10, null=True)),
            ],
            options={
                'db_table': 'course',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseMaterial',
            fields=[
                ('material_id',
                 models.CharField(db_column='Material_ID', max_length=16, primary_key=True, serialize=False)),
                ('material_order', models.CharField(blank=True, db_column='Material_Order', max_length=45, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
            ],
            options={
                'db_table': 'course_material',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseQuestion',
            fields=[
                ('question_id',
                 models.CharField(db_column='Question_ID', max_length=16, primary_key=True, serialize=False)),
                ('answer', models.TextField(blank=True, db_column='Answer', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
            ],
            options={
                'db_table': 'course_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('playlist_id',
                 models.CharField(db_column='Playlist_ID', max_length=16, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
            ],
            options={
                'db_table': 'playlist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('question_number',
                 models.CharField(db_column='Question_Number', max_length=16, primary_key=True, serialize=False)),
                ('text', models.TextField(blank=True, db_column='Text', null=True)),
            ],
            options={
                'db_table': 'quiz_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuizQuestionAnswers',
            fields=[
                ('answer_number',
                 models.CharField(db_column='Answer_Number', max_length=16, primary_key=True, serialize=False)),
                ('text', models.TextField(blank=True, db_column='Text', null=True)),
                ('feedback', models.TextField(blank=True, db_column='Feedback', null=True)),
                ('indication', models.TextField(blank=True, db_column='Indication', null=True)),
            ],
            options={
                'db_table': 'quiz_question_answers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Topics',
            fields=[
                ('topic_id', models.CharField(db_column='Topic_ID', max_length=16, primary_key=True, serialize=False)),
                ('topic_name', models.CharField(blank=True, db_column='Topic_Name', max_length=45, null=True)),
            ],
            options={
                'db_table': 'topics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(db_column='ID',auto_created=True,serialize=False,primary_key= True)),
                ('password', models.CharField(max_length=32)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=20, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=20, null=True)),
                ('picture', models.CharField(blank=True, db_column='Picture', max_length=45, null=True)),
                ('city', models.CharField(blank=True, db_column='CIty', max_length=45, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=45, null=True)),
                ('postal_code', models.CharField(blank=True, db_column='Postal_Code', max_length=45, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=45, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserContact',
            fields=[
                ('number', models.CharField(db_column='Number', max_length=20, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'user_contact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('admin', models.ForeignKey(db_column='Admin_ID', on_delete=django.db.models.deletion.DO_NOTHING,
                                            primary_key=True, serialize=False, to='DBModel.User')),
                ('verify_date', models.DateField(blank=True, db_column='Verify_Date', null=True)),
                ('verify_time', models.TimeField(blank=True, db_column='Verify_Time', null=True)),
                ('grantor_id', models.CharField(blank=True, db_column='Grantor_ID', max_length=16, null=True)),
            ],
            options={
                'db_table': 'administrator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompleteMaterial',
            fields=[
                ('student', models.ForeignKey(db_column='Student_ID', on_delete=django.db.models.deletion.DO_NOTHING,
                                              primary_key=True, serialize=False, to='DBModel.User')),
                ('complete_date', models.DateField(blank=True, db_column='Complete_Date', null=True)),
                ('complete_time', models.TimeField(blank=True, db_column='Complete_Time', null=True)),
                ('score', models.CharField(blank=True, db_column='Score', max_length=10, null=True)),
            ],
            options={
                'db_table': 'complete_material',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseEnrollment',
            fields=[
                ('student', models.ForeignKey(db_column='Student_ID', on_delete=django.db.models.deletion.DO_NOTHING,
                                              primary_key=True, serialize=False, to='DBModel.User')),
                ('confirmation_code',
                 models.CharField(blank=True, db_column='Confirmation_Code', max_length=20, null=True)),
                ('pay_date', models.DateField(blank=True, db_column='Pay_Date', null=True)),
                ('pay_time', models.TimeField(blank=True, db_column='Pay_Time', null=True)),
                ('comment', models.TextField(blank=True, db_column='Comment', null=True)),
                ('certification_number',
                 models.CharField(blank=True, db_column='Certification_Number', max_length=20, null=True)),
                ('complete_date', models.DateField(blank=True, db_column='Complete_Date', null=True)),
                ('complete_time', models.TimeField(blank=True, db_column='Complete_Time', null=True)),
                ('rating', models.CharField(blank=True, db_column='Rating', max_length=10, null=True)),
            ],
            options={
                'db_table': 'course_enrollment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseTopics',
            fields=[
                ('course', models.ForeignKey(db_column='Course_ID', on_delete=django.db.models.deletion.DO_NOTHING,
                                             primary_key=True, serialize=False, to='DBModel.Course')),
            ],
            options={
                'db_table': 'course_topics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DownloadFiles',
            fields=[
                ('material', models.ForeignKey(db_column='Material_ID', on_delete=django.db.models.deletion.DO_NOTHING,
                                               primary_key=True, serialize=False, to='DBModel.CourseMaterial')),
                ('path', models.CharField(blank=True, db_column='Path', max_length=100, null=True)),
                ('size', models.CharField(blank=True, db_column='Size', max_length=45, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=45, null=True)),
            ],
            options={
                'db_table': 'download_files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('faculty_id', models.ForeignKey(db_column='Faculty_ID', on_delete=django.db.models.deletion.DO_NOTHING,
                                              primary_key=True, serialize=False, to='DBModel.User')),
                ('website', models.CharField(blank=True, db_column='Website', max_length=45, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=45, null=True)),
                ('affiliation', models.CharField(blank=True, db_column='Affiliation', max_length=45, null=True)),
                ('verify_date', models.DateField(blank=True, db_column='Verify_Date', null=True)),
                ('verify_time', models.TimeField(blank=True, db_column='Verify_Time', null=True)),
            ],
            options={
                'db_table': 'faculty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('student_id', models.ForeignKey(db_column='Student_ID', on_delete=django.db.models.deletion.DO_NOTHING,
                                              primary_key=True, serialize=False, to='DBModel.User')),
            ],
            options={
                'db_table': 'interest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LikeCourseQuestion',
            fields=[
                ('student', models.ForeignKey(db_column='Student_ID', on_delete=django.db.models.deletion.DO_NOTHING,
                                              primary_key=True, serialize=False, to='DBModel.User')),
            ],
            options={
                'db_table': 'like_course_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('material', models.ForeignKey(db_column='Material_ID', on_delete=django.db.models.deletion.DO_NOTHING,
                                               primary_key=True, serialize=False, to='DBModel.CourseMaterial')),
                ('url', models.CharField(blank=True, db_column='URL', max_length=100, null=True)),
            ],
            options={
                'db_table': 'link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlaylistContain',
            fields=[
                ('playlist', models.ForeignKey(db_column='Playlist_ID', on_delete=django.db.models.deletion.DO_NOTHING,
                                               primary_key=True, serialize=False, to='DBModel.Playlist')),
            ],
            options={
                'db_table': 'playlist_contain',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('material', models.ForeignKey(db_column='Material_ID', on_delete=django.db.models.deletion.DO_NOTHING,
                                               primary_key=True, serialize=False, to='DBModel.CourseMaterial')),
                ('text', models.TextField(blank=True, db_column='Text', null=True)),
            ],
            options={
                'db_table': 'post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionRelation',
            fields=[
                ('material', models.ForeignKey(db_column='Material_ID', on_delete=django.db.models.deletion.DO_NOTHING,
                                               primary_key=True, serialize=False, to='DBModel.CourseMaterial')),
            ],
            options={
                'db_table': 'question_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('material', models.ForeignKey(db_column='Material_ID', on_delete=django.db.models.deletion.DO_NOTHING,
                                               primary_key=True, serialize=False, to='DBModel.CourseMaterial')),
                ('passing_score', models.CharField(blank=True, db_column='Passing_Score', max_length=20, null=True)),
            ],
            options={
                'db_table': 'quiz',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminPosition',
            fields=[
                ('admin', models.ForeignKey(db_column='Admin_ID', on_delete=django.db.models.deletion.DO_NOTHING,
                                            primary_key=True, serialize=False, to='DBModel.Administrator')),
                ('position', models.CharField(blank=True, db_column='Position', max_length=20, null=True)),
            ],
            options={
                'db_table': 'admin_position',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CreateCourse',
            fields=[
                ('faculty', models.ForeignKey(db_column='Faculty_ID', on_delete=django.db.models.deletion.DO_NOTHING,
                                              primary_key=True, serialize=False, to='DBModel.Faculty')),
                ('creation_date', models.DateField(blank=True, db_column='Creation_Date', null=True)),
            ],
            options={
                'db_table': 'create_course',
                'managed': False,
            },
        ),
    ]
